/*
Overall, IÂ´m happy with my solution - but I learned that its better to use flexbox throughout to minimize the need to manually place elements, like I did with the absolute & relative. 
This is necessary for todays responsive designs, where content must adapt to different screens.
*/

@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');

html, body {
  height: 100%;
}

body {
  font-family: Roboto, sans-serif;
  margin: 0;
  background: #aaa;
  color: #333;
  /* I'll give you this one for free lol */
  display: flex;
  align-items: center;
  justify-content: center;
}

.modal {
  background: white;
  width: 480px;
  border-radius: 10px;
  box-shadow: 2px 4px 16px rgba(0,0,0,.2);
  display: flex;                        /* added */
  padding: 15px;                        /* added */
  gap: 15px;                            /* added */
}

.icon {
  color: royalblue;
  font-size: 26px;
  font-weight: 700;
  background: lavender;
  width: 42px;
  height: 42px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  /* Prevent the icon from shrinking when other content grows */
  flex-shrink: 0;                   /* forgot to add (solution)*/
}

.container {
    position: relative;             /* added */
}

.header {
    font-size: 18px;
    font-weight: bold;              /* added */
}

.header,
.text {
    margin-bottom: 10px;            /* added */
}

.close-button {
  background: #eee;
  border-radius: 50%;
  color: #888;
  font-weight: 400;
  font-size: 16px;
  height: 24px;
  width: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 1px solid #eee;
  padding: 0;
  /* 
  Great solution for elements with fixed positions - here its better to work with flexbox, because its more dynamic for different screen widths. The div from .header should also surround the button to work with flexbox. (solution)
  */
  position: absolute;                   /* added */
  top: 0;                               /* added */
  right: 0;                             /* added */
}

button {
  cursor: pointer;
  padding: 8px 16px;
  border-radius: 8px;
}

button.continue {
  background: royalblue;
  border: 1px solid royalblue;
  color: white;
}

button.cancel {
  background: white;
  border: 1px solid #ddd;
  color: royalblue;
}